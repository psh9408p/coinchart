{"version":3,"sources":["api.tsx","Routes/Chart.tsx","Routes/Price.tsx","Routes/Coin.tsx","Routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistroy","isLoading","data","console","log","type","series","map","item","x","time_open","y","open","high","low","close","volume","options","theme","mode","xaxis","chart","height","width","toolbar","show","Price","OverView","OverviewItem","quotes","USD","ath_date","market_cap","percent_change_1h","percent_change_7d","percent_change_30d","percent_from_price_ath","styled","div","Coin","useParams","state","useLocation","useState","priceMatch","useRouteMatch","chartMatch","history","useHistory","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","name","CoinName","Btn","onClick","push","Loading","CoinContainer","rank","symbol","price","toFixed","Description","description","total_supply","max_supply","Tabs","Tab","isActive","to","path","button","props","accentColor","p","span","textColor","Coins","Container","Header","Title","CoinList","slice","coin","pathname","id","Img","src","toLowerCase","header","h1","ul","li","img","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","Theme","setTheme","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.5fc29a13.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistroy(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistroy } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nexport default function Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistroy(coinId)\n  );\n  console.log(data);\n  return (\n    <div>\n      {isLoading ? (\n        \" Loading Chart ...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((item) => {\n                const x = new Date(item?.time_open);\n                const y = [\n                  item.open,\n                  item.high,\n                  item.low,\n                  item.close,\n                  item.volume,\n                ];\n                return { x, y };\n              }),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            chart: {\n              height: 500,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface ChartProps {\n  coinId: string;\n}\nexport default function Price({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<PriceData>([\"priceInfo\", coinId], () =>\n    fetchCoinTickers(coinId)\n  );\n  console.log(data);\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price ....\"\n      ) : (\n        <div>\n          <OverView>\n            <OverviewItem>ath_date</OverviewItem>\n            <OverviewItem>{data?.quotes.USD.ath_date}</OverviewItem>\n          </OverView>\n          <OverView>\n            <OverviewItem>market_cap</OverviewItem>\n            <OverviewItem>{data?.quotes.USD.market_cap}</OverviewItem>\n          </OverView>\n          <OverView>\n            <OverviewItem>percent_change_1h</OverviewItem>\n            <OverviewItem>{data?.quotes.USD.percent_change_1h}</OverviewItem>\n          </OverView>\n          <OverView>\n            <OverviewItem> percent_change_7d</OverviewItem>\n            <OverviewItem>{data?.quotes.USD.percent_change_7d}</OverviewItem>\n          </OverView>\n          <OverView>\n            <OverviewItem>percent_change_30d</OverviewItem>\n            <OverviewItem>{data?.quotes.USD.percent_change_30d}</OverviewItem>\n          </OverView>\n          <OverView>\n            <OverviewItem>percent_from_price_ath</OverviewItem>\n            <OverviewItem>\n              {data?.quotes.USD.percent_from_price_ath}\n            </OverviewItem>\n          </OverView>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst OverView = styled.div`\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-bottom: 8px;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  span {\n    text-align: center;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Switch,\n  useLocation,\n  useParams,\n  Route,\n  useRouteMatch,\n  useHistory,\n} from \"react-router\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\ninterface routeParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nexport default function Coin() {\n  const { coinId } = useParams<routeParams>();\n  const { state } = useLocation<RouteState>();\n  // const [loading, setLoading] = useState(true);\n  const [info, setInfo] = useState<InfoData>();\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const history = useHistory();\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     console.log(infoData);\n\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     console.log(priceData);\n\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const goHome = () => {\n    history.push(\"/\");\n  };\n  const loading = infoLoading || tickersLoading;\n  return (\n    <>\n      <Helmet>\n        <title>\n          {state ? state?.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <CoinName>\n        <Btn onClick={goHome}>뒤로가기</Btn>\n        {state ? state?.name : loading ? \"Loading...\" : infoData?.name}\n      </CoinName>\n      {loading ? <Loading>Loading...</Loading> : null}\n      <CoinContainer>\n        <OverView>\n          <OverviewItem>\n            <span>Rank</span>\n            <span>{infoData?.rank}</span>\n          </OverviewItem>\n          <OverviewItem>\n            <span>Symbol</span>\n            <span>{infoData?.symbol}</span>\n          </OverviewItem>\n          <OverviewItem>\n            <span>Price</span>\n            <span>{tickersData?.quotes?.USD.price.toFixed(3)}</span>\n          </OverviewItem>\n        </OverView>\n        <Description>{infoData?.description}</Description>\n        <OverView>\n          <OverviewItem>\n            <span>Total Suply:</span>\n            <span>{tickersData?.total_supply}</span>\n          </OverviewItem>\n          <OverviewItem>\n            <span>Max Supply:</span>\n            <span>{tickersData?.max_supply}</span>\n          </OverviewItem>\n        </OverView>\n        <Tabs>\n          <Tab isActive={chartMatch !== null}>\n            <Link to={`/${coinId}/chart`}>Chart</Link>\n          </Tab>\n          <Tab isActive={priceMatch !== null}>\n            <Link to={`/${coinId}/price`}>Price</Link>\n          </Tab>\n        </Tabs>\n        <Switch>\n          <Route path={`/${coinId}/chart`}>\n            <Chart coinId={coinId} />\n          </Route>\n          <Route path={`/${coinId}/price`}>\n            <Price coinId={coinId} />\n          </Route>\n        </Switch>\n      </CoinContainer>\n    </>\n  );\n}\n\nconst Loading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  margin-top: 30px;\n`;\nconst Btn = styled.button`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nconst CoinName = styled.div`\n  display: flex;\n  padding: 0 20px;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 50px;\n  color: ${(props) => props.theme.accentColor};\n  margin-top: 30px;\n`;\n\nconst CoinContainer = styled.div`\n  padding: 20px;\n`;\n\nconst OverView = styled.div`\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 10px 20px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n  span {\n    text-align: center;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nexport default function Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>CoinList</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loading>Loading...</Loading>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n}\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 50px;\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  padding: 20px;\n  margin-bottom: 10px;\n  color: ${(props) => props.theme.accentColor};\n  a {\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./Routes/Coin\";\nimport Coins from \"./Routes/Coins\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins></Coins>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#8e44ad\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#2c3e50\",\n  accentColor: \"#8e44ad\",\n};\n","import React, { useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n*{\n  box-sizing:border-box;\n}\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na{\n  text-decoration: none;\n  color:inherit;\n}\n\n`;\n\nfunction App() {\n  const [Theme, setTheme] = useState(true);\n  const themeToggle = () => {\n    setTheme((Theme) => !Theme);\n  };\n  return (\n    <>\n      <ThemeProvider theme={Theme ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <div>\n          <button onClick={themeToggle}>ThemeToggle</button>\n        </div>\n        <Router />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}